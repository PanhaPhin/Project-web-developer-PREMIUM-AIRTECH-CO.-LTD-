import {
    setCompHeightCSSVar
} from '../../utils';
const PERSPECTIVE = '100px';
const DIRECTION_TO_PARAMS = { in: {
        easing: 'sineIn',
        fromZ: 0,
        toZ: 40,
        fromY: '-80%',
        toY: 'calc(var(--motion-comp-height, 100%) * 0.8)',
        perspectiveOriginYFrom: 'calc(var(--motion-comp-height, 100%) * 0.5 - 80%)',
        perspectiveOriginYTo: 'calc(var(--motion-comp-height, 100%) * 1.3)'
    },
    out: {
        easing: 'sineInOut',
        fromZ: 15 / 1.3,
        toZ: -15,
        fromY: '0px',
        toY: '0px',
        perspectiveOriginYFrom: '50%',
        perspectiveOriginYTo: '50%'
    }
};
export default function create(options, dom) {
    const {
        direction = 'in'
    } = options.namedEffect;
    const isIn = direction === 'in';
    const {
        easing,
        fromZ,
        toZ,
        fromY,
        toY,
        perspectiveOriginYFrom,
        perspectiveOriginYTo
    } = DIRECTION_TO_PARAMS[direction];
    if (dom && isIn) {
        setCompHeightCSSVar(dom);
    }
    return [{
        ...options,
        part: 'BG_LAYER',
        easing: 'linear',
        startOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 0
            }
        },
        endOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 100
            }
        },
        keyframes: [{
            perspective: PERSPECTIVE,
            perspectiveOrigin: `50% ${perspectiveOriginYFrom}`
        }, {
            perspective: PERSPECTIVE,
            perspectiveOrigin: `50% ${perspectiveOriginYTo}`
        }]
    }, {
        ...options,
        part: 'BG_MEDIA',
        easing: 'linear',
        startOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 0
            }
        },
        endOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 100
            }
        },
        keyframes: [{
            transform: `translateY(${fromY})`
        }, {
            transform: `translateY(${toY})`
        }]
    }, {
        ...options,
        easing,
        part: 'BG_MEDIA',
        composite: 'add',
        startOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 0
            }
        },
        endOffset: {
            name: 'cover',
            offset: {
                type: 'percentage',
                value: 100
            }
        },
        keyframes: [{
            transform: `translateZ(${fromZ}px)`
        }, {
            transform: `translateZ(${toZ}px)`
        }]
    }];
}
//# sourceMappingURL=BgZoom.js.map