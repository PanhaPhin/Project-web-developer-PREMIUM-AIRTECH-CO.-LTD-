import {
    mapRange
} from '@wix/wow-utils';
import {
    getCssUnits,
    getMouseTransitionEasing
} from '../../utils';
import {
    BaseMouse
} from './BaseMouse';
class TrackMouseAnimation extends BaseMouse {
    progress(_ref) {
        let {
            x: progressX,
            y: progressY
        } = _ref;
        const {
            inverted,
            distance,
            axis
        } = this.options;
        const invert = inverted ? -1 : 1;
        let translateX = 0;
        let translateY = 0;

        // if progressX === 0, translateX === -distance
        // if progressX === 0.5, translateX === 0
        // if progressX === 1, translateX === distance
        if (axis === 'both' || axis === 'horizontal') {
            translateX = mapRange(0, 1, -distance.value, distance.value, progressX) * invert;
        }
        if (axis === 'both' || axis === 'vertical') {
            translateY = mapRange(0, 1, -distance.value, distance.value, progressY) * invert;
        }
        const units = getCssUnits(distance.type);
        this.target.style.transform = `translateX(${translateX}${units}) translateY(${translateY}${units}) rotate(var(--comp-rotate-z, 0deg))`;
    }
    cancel() {
        this.target.style.transform = '';
        this.target.style.transition = '';
    }
}
export default function create(options) {
    const {
        transitionDuration,
        transitionEasing
    } = options;
    const {
        inverted = false,
            distance = {
                value: 200,
                type: 'px'
            },
            axis = 'both'
    } = options.namedEffect;
    const animationOptions = {
        transition: transitionDuration ? `transform ${transitionDuration}ms ${getMouseTransitionEasing(transitionEasing)}` : '',
        inverted,
        distance,
        axis
    };
    return target => new TrackMouseAnimation(target, animationOptions);
}
//# sourceMappingURL=TrackMouse.js.map